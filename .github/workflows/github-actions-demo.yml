name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
permissions:
  contents: write
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Instalar dependencias
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libffi-dev git pkg-config libssl-dev python3 python3-pip python3-venv doxygen gcc-arm-none-eabi parallel libreadline-dev libsdl2-2.0-0 libsdl2-dev
      
      - name: Install pycparser
        run: pip install pycparser

      - name: Clonar lv_micropython (Fork de MicroPython con LVGL)
        run: |
          git clone --recurse-submodules https://github.com/lvgl/lv_micropython.git micropython
          cd micropython
          git submodule update --init --recursive user_modules/lv_binding_micropython
          echo "$GITHUB_WORKSPACE"
      
      - name: Build MicroPython para RP2040
        run: |
          cd micropython
          make -C mpy-cross
          cd ports/rp2
          make submodules
          make clean
          make USER_C_MODULES=$GITHUB_WORKSPACE/micropython/user_modules/lv_binding_micropython/bindings.cmake CFLAGS="-DLV_LVGL_H_INCLUDE_SIMPLE"
      
      - name: Build MicroPython para Pico W
        run: |
          cd micropython
          make -C mpy-cross
          cd ports/rp2
          make BOARD=RPI_PICO_W submodules
          make BOARD=RPI_PICO_W clean
          make BOARD=RPI_PICO_W USER_C_MODULES=$GITHUB_WORKSPACE/micropython/user_modules/lv_binding_micropython/bindings.cmake CFLAGS="-DLV_LVGL_H_INCLUDE_SIMPLE"
      - run: echo "üçè This job's status is ${{ job.status }}."
